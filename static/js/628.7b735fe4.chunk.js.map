{"version":3,"file":"static/js/628.7b735fe4.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { ButtonStyled } from 'components/Button/Button.styled';\nimport { theme } from 'theme';\n\nexport const FormContainer = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.space[4]}px;\n    max-width: ${p => p.theme.sizes.formWidth};\n    padding: ${p => p.theme.space[4]}px;\n    margin-left: auto;\n    margin-right: auto;\n\n    background-color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.radii.box};\n    box-shadow: ${p => p.theme.shadows.box};\n\n    text-align: center;\n`;\n\nexport const Label = styled.label`\n    position: relative;   \n    width: 100%;\n    text-align: left;\n    font-size: ${p => theme.fontSizes.s};\n\n    :focus-within{\n        color: ${p => p.theme.colors.accent};\n    }\n`;\n\nexport const Input = styled.input`\n    margin-top: ${p => p.theme.space[1]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: 26px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: ${p => p.theme.radii.normal};\n\n    font: inherit;\n    font-size: ${p => theme.fontSizes.m};\n\n    background-color: #fff;\n\n    ::placeholder {\n        font-size: ${p => theme.fontSizes.s};\n    }\n`;\n\nexport const IconForm = styled.div`\n    position: absolute;\n    top: 30px;\n    left: ${p => p.theme.space[3]}px;\n`;\n\nexport const Button = styled(ButtonStyled)`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    margin: 0 auto;\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const Error = styled.p`\n    color: ${p => p.theme.colors.error};\n`;","import { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\nimport { FormContainer, Label, Input, Button, IconForm, Error } from './LoginForm.styled';\nimport { MdEmail, MdLock } from 'react-icons/md';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { theme } from 'theme';\nimport { Box } from \"components/Box/Box\";\n\nconst userSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Invalid email')\n      .required('Email is required'),\n    password: yup\n      .string()\n      .min(6, 'Too Short!')\n      .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: userSchema,\n    onSubmit: ({ email, password }, { resetForm }) => {\n      dispatch(\n        authOperations.logIn({\n          email,\n          password,\n      }));  \n\n      resetForm();\n    },\n  });\n\n  return (\n    <FormContainer onSubmit={handleSubmit} autoComplete=\"off\">\n      <Box fontSize={theme.fontSizes.l}\n        fontWeight={theme.fontWeights.bold}\n        as=\"h2\">Login form</Box>\n      <Label >\n        Email\n        <IconForm><MdEmail size={15} /></IconForm>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          value={values.email}\n          placeholder=\"example@mail.com\"\n          onChange={handleChange}\n          onBlur={handleBlur} />\n        {errors.email && touched.email && <Error>{errors.email}</Error>}\n      </Label >\n      <Label >\n        Password\n        <IconForm><MdLock size={15} /></IconForm>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          placeholder=\"Example123\"\n          onChange={handleChange}\n          onBlur={handleBlur}/>\n        {errors.password && touched.password && <Error>{errors.password}</Error>}\n      </Label >\n      <Button type=\"submit\">Login</Button>\n    </FormContainer>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Box } from 'components/Box/Box';\n\nexport default function Login() {\n  return (\n    <Box pt=\"16px\" as=\"main\">\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Box>\n  );\n}"],"names":["FormContainer","styled","p","theme","space","sizes","formWidth","colors","white","radii","box","shadows","Label","accent","Input","normal","IconForm","Button","ButtonStyled","Error","error","userSchema","yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","useFormik","initialValues","validationSchema","onSubmit","resetForm","authOperations","values","errors","touched","handleBlur","handleChange","handleSubmit","autoComplete","Box","fontSize","fontWeight","as","size","type","name","value","placeholder","onChange","onBlur","Login","pt","Helmet"],"sourceRoot":""}