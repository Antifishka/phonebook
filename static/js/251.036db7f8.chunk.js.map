{"version":3,"file":"static/js/251.036db7f8.chunk.js","mappings":"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","sources":["components/RegisterForm /RegisterForm.styled.js","components/RegisterForm /RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { ButtonStyled } from 'components/Button/Button.styled';\nimport { theme } from 'theme';\n\nexport const FormContainer = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.space[4]}px;\n    max-width: ${p => p.theme.sizes.formWidth};\n    padding: ${p => p.theme.space[4]}px;\n    margin-left: auto;\n    margin-right: auto;\n\n    background-color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.radii.box};\n    box-shadow: ${p => p.theme.shadows.box};\n\n    text-align: center;\n`;\n\nexport const Label = styled.label`\n    position: relative;   \n    width: 100%;\n    text-align: left;\n    font-size: ${p => theme.fontSizes.s};\n\n    :focus-within{\n        color: ${p => p.theme.colors.accent};\n    }\n`;\n\nexport const Input = styled.input`\n    margin-top: ${p => p.theme.space[1]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: 26px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: ${p => p.theme.radii.normal};\n\n    font: inherit;\n    font-size: ${p => theme.fontSizes.m};\n\n    background-color: #fff;\n\n    ::placeholder {\n        font-size: ${p => theme.fontSizes.s};\n    }\n`;\n\nexport const IconForm = styled.div`\n    position: absolute;\n    top: 30px;\n    left: ${p => p.theme.space[3]}px;\n`;\n\nexport const Button = styled(ButtonStyled)`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    margin: 0 auto;\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const Error = styled.p`\n    color: ${p => p.theme.colors.error};\n`;","import { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\nimport { FormContainer, Label, Input, Button, IconForm, Error } from './RegisterForm.styled';\nimport { FaUserEdit } from 'react-icons/fa';\nimport { MdEmail, MdLock } from 'react-icons/md';\nimport { theme } from 'theme';\nimport { Box } from \"components/Box/Box\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst userSchema = yup.object().shape({\n    name: yup\n      .string()\n      .min(2, 'Too Short!')\n      .max(30, 'Too Long!')\n      .required('Name is required'),\n    email: yup\n      .string()\n      .email('Invalid email')\n      .required('Email is required'),\n    password: yup\n      .string()\n      .min(6, 'Too Short!')\n      .required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: userSchema,\n    onSubmit: ({ name, email, password }, { resetForm }) => {\n      console.log(name, email, password)\n      dispatch(\n        authOperations.register({\n          name,\n          email,\n          password,\n      }));  \n\n      resetForm();\n    },\n  });\n\n  return (\n    <FormContainer onSubmit={handleSubmit} autoComplete=\"off\">\n      <Box fontSize={theme.fontSizes.l}\n        fontWeight={theme.fontWeights.bold}\n        as=\"h2\">Register form</Box>\n      <Label >\n        Username\n        <IconForm><FaUserEdit size={15} /></IconForm>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={values.name}\n          placeholder=\"Antifishka\"\n          onChange={handleChange}\n          onBlur={handleBlur} />\n        {errors.name && touched.name && <Error>{errors.name}</Error>}\n      </Label>\n      <Label >\n        Email\n        <IconForm><MdEmail size={15} /></IconForm>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          value={values.email}\n          placeholder=\"example@mail.com\"\n          onChange={handleChange}\n          onBlur={handleBlur} />\n        {errors.email && touched.email && <Error>{errors.email}</Error>}\n      </Label>\n      <Label >\n        Password\n        <IconForm><MdLock size={15} /></IconForm>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          placeholder=\"Example123\"\n          onChange={handleChange}\n          onBlur={handleBlur} />\n        {errors.password && touched.password && <Error>{errors.password}</Error>}\n      </Label>\n      <Button type=\"submit\">Register</Button>\n    </FormContainer>\n  );\n}; ","import { Box } from 'components/Box/Box';\nimport { RegisterForm } from 'components/RegisterForm /RegisterForm';\nimport { Helmet } from 'react-helmet';\n\n\nexport default function Register() {\n  return (\n    <Box pt=\"16px\" as=\"main\">\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Box>\n  );\n}"],"names":["FormContainer","styled","p","theme","space","sizes","formWidth","colors","white","radii","box","shadows","Label","accent","Input","normal","IconForm","Button","ButtonStyled","Error","error","userSchema","yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","useFormik","initialValues","validationSchema","onSubmit","resetForm","console","log","authOperations","values","errors","touched","handleBlur","handleChange","handleSubmit","autoComplete","Box","fontSize","fontWeight","as","size","type","value","placeholder","onChange","onBlur","Register","pt","Helmet"],"sourceRoot":""}